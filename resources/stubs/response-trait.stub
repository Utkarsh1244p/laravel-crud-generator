<?php

namespace App\Traits;

trait Response
{
    const SUCCESS = 200;
    const CREATED = 201;
    const NO_CONTENT = 204;
    const BAD_REQUEST = 400;
    const UNAUTHORIZED = 401;
    const FORBIDDEN = 403;
    const NOT_FOUND = 404;
    const METHOD_NOT_ALLOWED = 405;
    const INTERNAL_SERVER_ERROR = 500;
    const SERVICE_UNAVAILABLE = 503;

    public function badRequestResponse($message = "Bad Request.", $status = self::BAD_REQUEST)
    {
        return response()->json([
            "message" => $message,
            "status" => $status
        ], $status);
    }

    public function unauthorizedResponse($message = "Unauthorized.", $status = self::UNAUTHORIZED)
    {
        return response()->json([
            "message" => $message,
            "status" => $status
        ], $status);
    }

    public function forbiddenResponse($message = "Forbidden.", $status = self::FORBIDDEN)
    {
        return response()->json([
            "message" => $message,
            "status" => $status
        ], $status);
    }

    public function notFoundResponse($message = "Resource not found.", $status = self::NOT_FOUND)
    {
        return response()->json([
            "message" => $message,
            "status" => $status
        ], $status);
    }

    public function successResponse($data = null, $message = "Resource fetched successfully.", $status = self::SUCCESS)  
    {
        if($status == self::CREATED){
            return response()->json([
                "message" => $message,
                "status" => $status,
            ], $status);
        } else {
            return response()->json([
                "data" => $data,
                "message" => $message,
                "status" => $status,
            ], $status);
        }
    }

    public function errorResponse($message = "Server Error.", $status = self::INTERNAL_SERVER_ERROR)
    {
        return response()->json([
            "message" => $message,
            "status" => $status
        ], $status);
    }
}
